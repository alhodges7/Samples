@using System.Web
@model Astra.Models.ResourceSuggestion
@using Astra.Helper;

@{
    ViewBag.Title = "Create";
}

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/ckeditor/ckeditor.js")
@Scripts.Render("~/Scripts/ckeditor/adapters/jquery.js")
}

<h2>Make New Suggestion</h2>
@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    TempData["StatusSeletionCode"] = ViewBag.StatusSeletionCode;
    TempData["CurrentDisplayType"] = ViewBag.CurrentDisplayType;

    <fieldset>

        <legend>ResourceSuggestion</legend>
     <div class="createSuggestion">
        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="title-editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="description-editor-field">
             @Html.Raw(Html.TextAreaFor(x=>x.Description, new{@class="ckeditor", style="word-wrap:break-word;"}))
             @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StringPrice)
        </div>
        <div class="price-editor-field">
            @Html.EditorFor(model => model.StringPrice)
            @Html.ValidationMessageFor(model => model.StringPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ReasonNeeded)
        </div>
        <div class="reasonneeded-editor-field">
            @Html.Raw(Html.TextAreaFor(x=>x.ReasonNeeded, new{@class="ckeditor", style="word-wrap:break-word;"}))
            @Html.ValidationMessageFor(model => model.ReasonNeeded)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.URL)
        </div>
        <div class="url-editor-field">
            @Html.EditorFor(model => model.URL)
            @Html.ValidationMessageFor(model => model.URL)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ISBN)
        </div>
        <div class="isbn-editor-field">
            @Html.EditorFor(model => model.ISBN)
            @Html.ValidationMessageFor(model => model.ISBN)
        </div>

        @if (Roles.IsUserInRole(MembershipHelper.CurrentUserName(), MembershipHelper.ROLE_ADMIN) || Roles.IsUserInRole(MembershipHelper.CurrentUserName(), MembershipHelper.ROLE_LIBRARIAN))
        {
            <div class="editor-label">
                @Html.LabelFor(model => model.LibrariansNote)
            </div>
            <div class="librariansnote-editor-field">
                 @Html.Raw(Html.TextAreaFor(x=>x.LibrariansNote, new{@class="ckeditor", style="word-wrap:break-word;"}))
                 @* @Html.TextAreaFor(model => model.LibrariansNote) *@
                 @Html.ValidationMessageFor(model => model.LibrariansNote)
            </div>
        }

        <div>
            <input type="submit" value="Create" style="margin:10px 10px 10px 10px;"/>
       </div>
           </div>
    </fieldset>

}

<div>
    @Html.ActionLink("Back to List", "Index")
    <br />
    <br />
</div>
