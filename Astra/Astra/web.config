<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
      <section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
      <section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" />
      <section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" />
    </sectionGroup>
    <section name="sharePointIntegration" type="Astra.AstraConfigurations.Settings.SharePointIntegrationSettings, Astra" allowLocation="true" allowDefinition="Everywhere" />
    <section name="maintenanceSettings" type="Astra.AstraConfigurations.Settings.MaintenanceSettings, Astra" allowLocation="true" allowDefinition="Everywhere" />
    <section name="reportSettings" type="Astra.AstraConfigurations.Settings.ReportSettings, Astra" allowLocation="true" allowDefinition="Everywhere" />
    <section name="emailSettings" type="Astra.AstraConfigurations.Settings.EmailSettings, Astra" allowLocation="true" allowDefinition="Everywhere" />
    <sectionGroup name="astraServiceSettings">
      <section name="newResourceNotification" type="Astra.AstraConfigurations.Settings.NewResourceNotificationSection" allowLocation="true" allowDefinition="Everywhere" />
      <section name="overdueBookNotification" type="Astra.AstraConfigurations.Settings.OverdueBookNotificationSection" allowLocation="true" allowDefinition="Everywhere" />
    </sectionGroup>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection,&#xD;&#xA;Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <typeAliases>
      <!-- DataBase Context -->
      <typeAlias alias="IAstraContext" type="Astra.DatabaseContext.IAstraContext, Astra" />
      <typeAlias alias="AstraContext" type="Astra.DatabaseContext.AstraContext, Astra" />
      <!-- Repositories -->
      <typeAlias alias="ICheckOutRepository" type="Astra.Repositories.ICheckOutRepository, Astra" />
      <typeAlias alias="CheckOutRepository" type="Astra.Repositories.CheckOutRepository, Astra" />
      <typeAlias alias="ICommentRepository" type="Astra.Repositories.ICommentRepository, Astra" />
      <typeAlias alias="CommentRepository" type="Astra.Repositories.CommentRepository, Astra" />
      <typeAlias alias="IKeyWordLinksRepository" type="Astra.Repositories.IKeyWordLinksRepository, Astra" />
      <typeAlias alias="KeyWordLinksRepository" type="Astra.Repositories.KeyWordLinksRepository, Astra" />
      <typeAlias alias="IKeywordRepository" type="Astra.Repositories.IKeywordRepository, Astra" />
      <typeAlias alias="KeywordRepository" type="Astra.Repositories.KeywordRepository, Astra" />
      <typeAlias alias="IMediaTypeRepository" type="Astra.Repositories.IMediaTypeRepository, Astra" />
      <typeAlias alias="MediaTypeRepository" type="Astra.Repositories.MediaTypeRepository, Astra" />
      <typeAlias alias="IMiscRepository" type="Astra.Repositories.IMiscRepository, Astra" />
      <typeAlias alias="MiscRepository" type="Astra.Repositories.MiscRepository, Astra" />
      <typeAlias alias="IRatingsRepository" type="Astra.Repositories.IRatingsRepository, Astra" />
      <typeAlias alias="RatingsRepository" type="Astra.Repositories.RatingsRepository, Astra" />
      <typeAlias alias="IReportRepository" type="Astra.Repositories.IReportRepository, Astra" />
      <typeAlias alias="ReportRepository" type="Astra.Repositories.ReportRepository, Astra" />
      <typeAlias alias="IReservationRepository" type="Astra.Repositories.IReservationRepository, Astra" />
      <typeAlias alias="ReservationRepository" type="Astra.Repositories.ReservationRepository, Astra" />
      <typeAlias alias="IResourceRepository" type="Astra.Repositories.IResourceRepository, Astra" />
      <typeAlias alias="ResourceRepository" type="Astra.Repositories.ResourceRepository, Astra" />
      <typeAlias alias="IResourceTypeRepository" type="Astra.Repositories.IResourceTypeRepository, Astra" />
      <typeAlias alias="ResourceTypeRepository" type="Astra.Repositories.ResourceTypeRepository, Astra" />
      <typeAlias alias="IScopedCompositeRepository" type="Astra.Repositories.IScopedCompositeRepository, Astra" />
      <typeAlias alias="ScopedCompositeRepository" type="Astra.Repositories.ScopedCompositeRepository, Astra" />
      <typeAlias alias="ICompositeRepository" type="Astra.Repositories.ICompositeRepository, Astra" />
      <typeAlias alias="CompositeRepository" type="Astra.Repositories.CompositeRepository, Astra" />
      <typeAlias alias="ISuggestionRepository" type="Astra.Repositories.ISuggestionRepository, Astra" />
      <typeAlias alias="SuggestionRepository" type="Astra.Repositories.SuggestionRepository, Astra" />
      <typeAlias alias="IUserMailMessageRepository" type="Astra.Repositories.IUserMailMessageRepository, Astra" />
      <typeAlias alias="UserMailMessageRepository" type="Astra.Repositories.UserMailMessageRepository, Astra" />
      <typeAlias alias="IUserProfileRepository" type="Astra.Repositories.IUserProfileRepository, Astra" />
      <typeAlias alias="UserProfileRepository" type="Astra.Repositories.UserProfileRepository, Astra" />
    </typeAliases>
    <container>
      <register type="IAstraContext" mapTo="AstraContext" />
      <register type="ICheckOutRepository" mapTo="CheckOutRepository" />
      <register type="ICommentRepository" mapTo="CommentRepository" />
      <register type="IKeyWordLinksRepository" mapTo="KeyWordLinksRepository" />
      <register type="IKeywordRepository" mapTo="KeywordRepository" />
      <register type="IMediaTypeRepository" mapTo="MediaTypeRepository" />
      <register type="IMiscRepository" mapTo="MiscRepository" />
      <register type="IRatingsRepository" mapTo="RatingsRepository" />
      <register type="IReportRepository" mapTo="ReportRepository" />
      <register type="IReservationRepository" mapTo="ReservationRepository" />
      <register type="IResourceRepository" mapTo="ResourceRepository" />
      <register type="IResourceTypeRepository" mapTo="ResourceTypeRepository" />
      <register type="IScopedCompositeRepository" mapTo="ScopedCompositeRepository" />
      <register type="ICompositeRepository" mapTo="CompositeRepository" />
      <register type="ISuggestionRepository" mapTo="SuggestionRepository" />
      <register type="IUserMailMessageRepository" mapTo="UserMailMessageRepository" />
      <register type="IUserProfileRepository" mapTo="UserProfileRepository" />
    </container>
  </unity>
  <!--<unity configSource="unity.config"/>-->
  <astraServiceSettings>
    <newResourceNotification enableService="yes" serviceFrequency="24"
      lastNewResourceCheck="9/6/2013 6:00:57 PM" />
    <overdueBookNotification enableService="yes" overdueBookDeadline="336"
      serviceFrequency="24" lastOverdueCheck="9/6/2013 7:15:04 PM" />
  </astraServiceSettings>
  <system.net>
    <mailSettings>
      <!-- Method#1: Configure smtp server credentials --><!--
      <smtp deliveryMethod="Network" from="test@test.com">
        <network host="sendmtw.mindtree.com" port="25" userName="username" password="password" defaultCredentials="true" />
      </smtp>-->
      <smtp from="some-email@gmail.com">
        <network enableSsl="true" host="smtp.gmail.com" port="587" userName="some-email@gmail.com" password="valid-password" />
      </smtp>
      <!-- Method#2: Dump emails to a local directory -->
      <!--
			<smtp from="some-email@gmail.com" deliveryMethod="SpecifiedPickupDirectory">
				<network host="localhost" />
				<specifiedPickupDirectory pickupDirectoryLocation="c:\temp\"/>
      </smtp>
			-->
    </mailSettings>
  </system.net>
  <log4net>
    <appender name="AdoNetAppender_sqlServer" type="log4net.Appender.AdoNetAppender">
      <bufferSize value="1" />
      <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
      <!--<connectionString value="Data Source=E2MS00002;Initial Catalog=Astra;Integrated Security=false;User ID=sa;Password=mindtree#99;MultipleActiveResultSets=true;" />-->
      <connectionString value="Data Source=localhost;Initial Catalog=Astra;Integrated Security=true; MultipleActiveResultSets=true;" />
      <commandText value="INSERT INTO EventLog ([LogDate],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
      <parameter>
        <parameterName value="@log_date" />
        <dbType value="DateTime" />
        <layout type="log4net.Layout.PatternLayout" value="%date{yyyy'-'MM'-'dd HH':'mm':'ss'.'fff}" />
      </parameter>
      <parameter>
        <parameterName value="@thread" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout" value="%thread" />
      </parameter>
      <parameter>
        <parameterName value="@log_level" />
        <dbType value="String" />
        <size value="50" />
        <layout type="log4net.Layout.PatternLayout" value="%level" />
      </parameter>
      <parameter>
        <parameterName value="@logger" />
        <dbType value="String" />
        <size value="255" />
        <layout type="log4net.Layout.PatternLayout" value="%logger" />
      </parameter>
      <parameter>
        <parameterName value="@message" />
        <dbType value="String" />
        <size value="4000" />
        <layout type="log4net.Layout.PatternLayout" value="%message" />
      </parameter>
      <parameter>
        <parameterName value="@exception" />
        <dbType value="String" />
        <size value="2000" />
        <layout type="log4net.Layout.ExceptionLayout" />
      </parameter>
    </appender>
    <root>
      <level value="Info" />
      <appender-ref ref="AdoNetAppender_sqlServer" />
    </root>
  </log4net>
  <sharePointIntegration url="http://e2ms00001:17012" useDefaultCredentials="false">
    <Credentials userName="MINDTREE/M1021693" password="1234567" impersonationLevel="Impersonation" />
    <SuggestedResources passThroughSuggestions="false" />
  </sharePointIntegration>
  <maintenanceSettings purgeDebugLogDays="30" purgeInfoLogDays="90" purgeErrorLogDays="180" />
  <reportSettings reportServerUrl="http://e2ms00002/ReportServer_SQL2012"/>
  <emailSettings smtpServer="sendmtw.mindtree.com" userName="username" password="password" portNumber="25" useDefaultCredentials="false" emailSystemMode="Off" enableSSL="false" />
  <connectionStrings>
    <!--<add name="AstraContext" connectionString="Data Source=E2MS00002;Initial Catalog=Astra;Integrated Security=false;User ID=sa;Password=mindtree#99;MultipleActiveResultSets=true;" providerName="System.Data.SqlClient" />-->
    <add name="AstraContext" connectionString="Data Source=localhost;Initial Catalog=Astra;Integrated Security=true; MultipleActiveResultSets=true;" providerName="System.Data.SqlClient" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="enableSimpleMembership" value="false" />
  </appSettings>
  <system.web>
    <httpHandlers>
      <add path="*.mti" verb="*" type="Astra.Handlers.ImageHttpHandler" />
      <add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" validate="false" />
    </httpHandlers>
    <compilation debug="true" targetFramework="4.5">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="Microsoft.ReportViewer.Common, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="Microsoft.Build.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
      </assemblies>
      <buildProviders>
        <add extension=".rdlc" type="Microsoft.Reporting.RdlBuildProvider, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
      </buildProviders>
    </compilation>
    <httpRuntime targetFramework="4.5" />
    <authentication mode="Windows">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    
        <roleManager cacheRolesInCookie="true" defaultProvider="AstraRoleProvider" enabled="true">
        <providers>
            <clear />
            <add name="AstraRoleProvider" type="Astra.Helper.AstraRoleProvider" />
        </providers>
    </roleManager>

        <membership defaultProvider="AstraMembershipProvider">
      <providers>
          <clear />
          <add name="AstraMembershipProvider" type="Astra.Helper.AstraMembershipProvider" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="9" minRequiredPasswordLength="5" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>

    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Optimization" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
      <add name="mti" path="*.mti" verb="*" type="Astra.Handlers.ImageHttpHandler" />
      <add name="ReportViewerWebControlHandler" preCondition="integratedMode" verb="*" path="Reserved.ReportViewerWebControl.axd" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    </handlers>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="2.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
    <!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
    <legacyHMACWarning enabled="0" />
    <!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  </runtime>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="v11.0" />
      </parameters>
    </defaultConnectionFactory>
  </entityFramework>
  <system.net>
    <defaultProxy enabled="true" />
    <settings>
      <!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
      <!--<servicePointManager checkCertificateRevocationList="true"/>-->
    </settings>
  </system.net>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="ListsSoap">
          <security mode="TransportCredentialOnly">
            <transport clientCredentialType="Ntlm" />
            <message clientCredentialType="UserName" algorithmSuite="Default" />
          </security>
        </binding>
      </basicHttpBinding>
      <customBinding>
        <binding name="ListsSoap12">
          <textMessageEncoding messageVersion="Soap12" />
          <httpTransport />
        </binding>
      </customBinding>
    </bindings>
    <client>
      <endpoint address="http://e2ml06660/sites/AshSP1/_vti_bin/Lists.asmx" binding="basicHttpBinding" bindingConfiguration="ListsSoap" contract="ListsSoap" name="ListsSoap" />
    </client>
  </system.serviceModel>
  <dotNetOpenAuth>
    <messaging>
      <untrustedWebRequest>
        <whitelistHosts>
          <!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
          <!--<add name="localhost" />-->
        </whitelistHosts>
      </untrustedWebRequest>
    </messaging>
    <!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
    <reporting enabled="true" />
    <!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. -->
    <!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ -->
    <openid>
      <relyingParty>
        <security requireSsl="false">
          <!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
          <!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
        </security>
        <behaviors>
          <!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
          <add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
        </behaviors>
      </relyingParty>
    </openid>
  </dotNetOpenAuth>
  <uri>
    <!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
    <idn enabled="All" />
    <iriParsing enabled="true" />
  </uri>
</configuration>